import asyncio, logging, os
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.filters import CommandStart

BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
logging.basicConfig(level=logging.INFO)

PRESENTATION_PATH = "files/Somaspace_HR.pdf"
VIDEO_PATH = "files/masterclass.mp4"
CHANNEL_URL = "https://t.me/your_somaspace_channel"  # ‚Üê –∑–∞–º–µ–Ω–∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–≤–æ–π –∫–∞–Ω–∞–ª

def main_menu():
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é", callback_data="presentation")],
        [InlineKeyboardButton(text="üé• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å", callback_data="masterclass")],
        [InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", callback_data="channel")]
    ])
    return kb

@dp.message(CommandStart())
async def start(m: Message):
    await m.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø S√µmaSpace-–±–æ—Ç –¥–ª—è HR. –ó–∞ 5 –º–∏–Ω—É—Ç ‚Äî —á—Ç–æ —ç—Ç–æ –∏ –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∏–ª–æ—Ç.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–≥:",
        reply_markup=main_menu()
    )

@dp.callback_query(F.data == "presentation")
async def send_presentation(c: CallbackQuery):
    if os.path.exists(PRESENTATION_PATH):
        await bot.send_document(c.from_user.id, FSInputFile(PRESENTATION_PATH))
    else:
        await bot.send_message(c.from_user.id, "–§–∞–π–ª –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.")
    await c.answer()

@dp.callback_query(F.data == "masterclass")
async def send_masterclass(c: CallbackQuery):
    if os.path.exists(VIDEO_PATH):
        await bot.send_video(c.from_user.id, FSInputFile(VIDEO_PATH),
                             caption="10 –º–∏–Ω—É—Ç: –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∏–ª–æ—Ç S√µmaSpace –±–µ–∑ –±—é—Ä–æ–∫—Ä–∞—Ç–∏–∏.")
    else:
        await bot.send_message(c.from_user.id, "–í–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
    await c.answer()

@dp.callback_query(F.data == "channel")
async def go_channel(c: CallbackQuery):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", url=CHANNEL_URL)]
    ])
    await c.message.answer("–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –Ω–∞—à –∫–∞–Ω–∞–ª:", reply_markup=kb)
    await c.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

